{"ast":null,"code":"var _toConsumableArray = require(\"/home/nikhileswar/Desktop/Doctorspectra/test-react/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _slicedToArray = require(\"/home/nikhileswar/Desktop/Doctorspectra/test-react/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/home/nikhileswar/Desktop/Doctorspectra/test-react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n/**\n * React Router DOM v6.14.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('react-router'), require('@remix-run/router')) : typeof define === 'function' && define.amd ? define(['exports', 'react', 'react-router', '@remix-run/router'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ReactRouterDOM = {}, global.React, global.ReactRouter, global.RemixRouter));\n})(this, function (exports, React, reactRouter, router) {\n  'use strict';\n\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n      Object.keys(e).forEach(function (k) {\n        if (k !== 'default') {\n          var d = Object.getOwnPropertyDescriptor(e, k);\n          Object.defineProperty(n, k, d.get ? d : {\n            enumerable: true,\n            get: function get() {\n              return e[k];\n            }\n          });\n        }\n      });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n  }\n  var React__namespace = /*#__PURE__*/_interopNamespace(React);\n  function _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n    return target;\n  }\n  var defaultMethod = \"get\";\n  var defaultEncType = \"application/x-www-form-urlencoded\";\n  function isHtmlElement(object) {\n    return object != null && typeof object.tagName === \"string\";\n  }\n  function isButtonElement(object) {\n    return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n  }\n  function isFormElement(object) {\n    return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n  }\n  function isInputElement(object) {\n    return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n  }\n  function isModifiedEvent(event) {\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n  }\n  function shouldProcessLinkClick(event, target) {\n    return event.button === 0 && (\n    // Ignore everything but left clicks\n    !target || target === \"_self\") &&\n    // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n    ;\n  }\n\n  /**\n   * Creates a URLSearchParams object using the given initializer.\n   *\n   * This is identical to `new URLSearchParams(init)` except it also\n   * supports arrays as values in the object form of the initializer\n   * instead of just strings. This is convenient when you need multiple\n   * values for a given key, but don't want to use an array initializer.\n   *\n   * For example, instead of:\n   *\n   *   let searchParams = new URLSearchParams([\n   *     ['sort', 'name'],\n   *     ['sort', 'price']\n   *   ]);\n   *\n   * you can do:\n   *\n   *   let searchParams = createSearchParams({\n   *     sort: ['name', 'price']\n   *   });\n   */\n  function createSearchParams(init) {\n    if (init === void 0) {\n      init = \"\";\n    }\n    return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {\n      var value = init[key];\n      return memo.concat(Array.isArray(value) ? value.map(function (v) {\n        return [key, v];\n      }) : [[key, value]]);\n    }, []));\n  }\n  function getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n    var searchParams = createSearchParams(locationSearch);\n    if (defaultSearchParams) {\n      var _iterator = _createForOfIteratorHelper(defaultSearchParams.keys()),\n        _step;\n      try {\n        var _loop = function _loop() {\n          var key = _step.value;\n          if (!searchParams.has(key)) {\n            defaultSearchParams.getAll(key).forEach(function (value) {\n              searchParams.append(key, value);\n            });\n          }\n        };\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n    return searchParams;\n  }\n\n  // Thanks https://github.com/sindresorhus/type-fest!\n\n  // One-time check for submitter support\n  var _formDataSupportsSubmitter = null;\n  function isFormDataSubmitterSupported() {\n    if (_formDataSupportsSubmitter === null) {\n      try {\n        new FormData(document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0);\n        _formDataSupportsSubmitter = false;\n      } catch (e) {\n        _formDataSupportsSubmitter = true;\n      }\n    }\n    return _formDataSupportsSubmitter;\n  }\n  var supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\n  function getFormEncType(encType) {\n    if (encType != null && !supportedFormEncTypes.has(encType)) {\n      router.UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\"));\n      return null;\n    }\n    return encType;\n  }\n  function getFormSubmissionInfo(target, basename) {\n    var method;\n    var action;\n    var encType;\n    var formData;\n    var body;\n    if (isFormElement(target)) {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      var attr = target.getAttribute(\"action\");\n      action = attr ? router.stripBasename(attr, basename) : null;\n      method = target.getAttribute(\"method\") || defaultMethod;\n      encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n      formData = new FormData(target);\n    } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n      var form = target.form;\n      if (form == null) {\n        throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n      }\n\n      // <button>/<input type=\"submit\"> may override attributes of <form>\n\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      var _attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n      action = _attr ? router.stripBasename(_attr, basename) : null;\n      method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n      encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n\n      // Build a FormData object populated from a form and submitter\n      formData = new FormData(form, target);\n\n      // If this browser doesn't support the `FormData(el, submitter)` format,\n      // then tack on the submitter value at the end.  This is a lightweight\n      // solution that is not 100% spec compliant.  For complete support in older\n      // browsers, consider using the `formdata-submitter-polyfill` package\n      if (!isFormDataSubmitterSupported()) {\n        var name = target.name,\n          type = target.type,\n          value = target.value;\n        if (type === \"image\") {\n          var prefix = name ? name + \".\" : \"\";\n          formData.append(prefix + \"x\", \"0\");\n          formData.append(prefix + \"y\", \"0\");\n        } else if (name) {\n          formData.append(name, value);\n        }\n      }\n    } else if (isHtmlElement(target)) {\n      throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n    } else {\n      method = defaultMethod;\n      action = null;\n      encType = defaultEncType;\n      body = target;\n    }\n\n    // Send body for <Form encType=\"text/plain\" so we encode it into text\n    if (formData && encType === \"text/plain\") {\n      body = formData;\n      formData = undefined;\n    }\n    return {\n      action: action,\n      method: method.toLowerCase(),\n      encType: encType,\n      formData: formData,\n      body: body\n    };\n  }\n  var _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n    _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n    _excluded3 = [\"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"submit\", \"relative\", \"preventScrollReset\"];\n  //#endregion\n\n  ////////////////////////////////////////////////////////////////////////////////\n  //#region Routers\n  ////////////////////////////////////////////////////////////////////////////////\n  function createBrowserRouter(routes, opts) {\n    return router.createRouter({\n      basename: opts == null ? void 0 : opts.basename,\n      future: _extends({}, opts == null ? void 0 : opts.future, {\n        v7_prependBasename: true\n      }),\n      history: router.createBrowserHistory({\n        window: opts == null ? void 0 : opts.window\n      }),\n      hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n      routes: routes,\n      mapRouteProperties: reactRouter.UNSAFE_mapRouteProperties\n    }).initialize();\n  }\n  function createHashRouter(routes, opts) {\n    return router.createRouter({\n      basename: opts == null ? void 0 : opts.basename,\n      future: _extends({}, opts == null ? void 0 : opts.future, {\n        v7_prependBasename: true\n      }),\n      history: router.createHashHistory({\n        window: opts == null ? void 0 : opts.window\n      }),\n      hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n      routes: routes,\n      mapRouteProperties: reactRouter.UNSAFE_mapRouteProperties\n    }).initialize();\n  }\n  function parseHydrationData() {\n    var _window;\n    var state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n    if (state && state.errors) {\n      state = _extends({}, state, {\n        errors: deserializeErrors(state.errors)\n      });\n    }\n    return state;\n  }\n  function deserializeErrors(errors) {\n    if (!errors) return null;\n    var entries = Object.entries(errors);\n    var serialized = {};\n    for (var _i = 0, _entries = entries; _i < _entries.length; _i++) {\n      var _entries$_i = _slicedToArray(_entries[_i], 2),\n        key = _entries$_i[0],\n        val = _entries$_i[1];\n      // Hey you!  If you change this, please change the corresponding logic in\n      // serializeErrors in react-router-dom/server.tsx :)\n      if (val && val.__type === \"RouteErrorResponse\") {\n        serialized[key] = new router.ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n      } else if (val && val.__type === \"Error\") {\n        // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n        if (val.__subType) {\n          var ErrorConstructor = window[val.__subType];\n          if (typeof ErrorConstructor === \"function\") {\n            try {\n              // @ts-expect-error\n              var error = new ErrorConstructor(val.message);\n              // Wipe away the client-side stack trace.  Nothing to fill it in with\n              // because we don't serialize SSR stack traces for security reasons\n              error.stack = \"\";\n              serialized[key] = error;\n            } catch (e) {\n              // no-op - fall through and create a normal Error\n            }\n          }\n        }\n        if (serialized[key] == null) {\n          var _error = new Error(val.message);\n          // Wipe away the client-side stack trace.  Nothing to fill it in with\n          // because we don't serialize SSR stack traces for security reasons\n          _error.stack = \"\";\n          serialized[key] = _error;\n        }\n      } else {\n        serialized[key] = val;\n      }\n    }\n    return serialized;\n  }\n\n  //#endregion\n\n  ////////////////////////////////////////////////////////////////////////////////\n  //#region Components\n  ////////////////////////////////////////////////////////////////////////////////\n\n  /**\n    Webpack + React 17 fails to compile on any of the following because webpack\n    complains that `startTransition` doesn't exist in `React`:\n    * import { startTransition } from \"react\"\n    * import * as React from from \"react\";\n      \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n    * import * as React from from \"react\";\n      \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n     Moving it to a constant such as the following solves the Webpack/React 17 issue:\n    * import * as React from from \"react\";\n      const START_TRANSITION = \"startTransition\";\n      START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n     However, that introduces webpack/terser minification issues in production builds\n    in React 18 where minification/obfuscation ends up removing the call of\n    React.startTransition entirely from the first half of the ternary.  Grabbing\n    this exported reference once up front resolves that issue.\n     See https://github.com/remix-run/react-router/issues/10579\n  */\n  var START_TRANSITION = \"startTransition\";\n  var startTransitionImpl = React__namespace[START_TRANSITION];\n  /**\n   * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n   */\n  function BrowserRouter(_ref) {\n    var basename = _ref.basename,\n      children = _ref.children,\n      future = _ref.future,\n      window = _ref.window;\n    var historyRef = React__namespace.useRef();\n    if (historyRef.current == null) {\n      historyRef.current = router.createBrowserHistory({\n        window: window,\n        v5Compat: true\n      });\n    }\n    var history = historyRef.current;\n    var _React__namespace$use = React__namespace.useState({\n        action: history.action,\n        location: history.location\n      }),\n      _React__namespace$use2 = _slicedToArray(_React__namespace$use, 2),\n      state = _React__namespace$use2[0],\n      setStateImpl = _React__namespace$use2[1];\n    var _ref9 = future || {},\n      v7_startTransition = _ref9.v7_startTransition;\n    var setState = React__namespace.useCallback(function (newState) {\n      v7_startTransition && startTransitionImpl ? startTransitionImpl(function () {\n        return setStateImpl(newState);\n      }) : setStateImpl(newState);\n    }, [setStateImpl, v7_startTransition]);\n    React__namespace.useLayoutEffect(function () {\n      return history.listen(setState);\n    }, [history, setState]);\n    return /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\n      basename: basename,\n      children: children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    });\n  }\n  /**\n   * A `<Router>` for use in web browsers. Stores the location in the hash\n   * portion of the URL so it is not sent to the server.\n   */\n  function HashRouter(_ref2) {\n    var basename = _ref2.basename,\n      children = _ref2.children,\n      future = _ref2.future,\n      window = _ref2.window;\n    var historyRef = React__namespace.useRef();\n    if (historyRef.current == null) {\n      historyRef.current = router.createHashHistory({\n        window: window,\n        v5Compat: true\n      });\n    }\n    var history = historyRef.current;\n    var _React__namespace$use3 = React__namespace.useState({\n        action: history.action,\n        location: history.location\n      }),\n      _React__namespace$use4 = _slicedToArray(_React__namespace$use3, 2),\n      state = _React__namespace$use4[0],\n      setStateImpl = _React__namespace$use4[1];\n    var _ref10 = future || {},\n      v7_startTransition = _ref10.v7_startTransition;\n    var setState = React__namespace.useCallback(function (newState) {\n      v7_startTransition && startTransitionImpl ? startTransitionImpl(function () {\n        return setStateImpl(newState);\n      }) : setStateImpl(newState);\n    }, [setStateImpl, v7_startTransition]);\n    React__namespace.useLayoutEffect(function () {\n      return history.listen(setState);\n    }, [history, setState]);\n    return /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\n      basename: basename,\n      children: children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    });\n  }\n  /**\n   * A `<Router>` that accepts a pre-instantiated history object. It's important\n   * to note that using your own history object is highly discouraged and may add\n   * two versions of the history library to your bundles unless you use the same\n   * version of the history library that React Router uses internally.\n   */\n  function HistoryRouter(_ref3) {\n    var basename = _ref3.basename,\n      children = _ref3.children,\n      future = _ref3.future,\n      history = _ref3.history;\n    var _React__namespace$use5 = React__namespace.useState({\n        action: history.action,\n        location: history.location\n      }),\n      _React__namespace$use6 = _slicedToArray(_React__namespace$use5, 2),\n      state = _React__namespace$use6[0],\n      setStateImpl = _React__namespace$use6[1];\n    var _ref11 = future || {},\n      v7_startTransition = _ref11.v7_startTransition;\n    var setState = React__namespace.useCallback(function (newState) {\n      v7_startTransition && startTransitionImpl ? startTransitionImpl(function () {\n        return setStateImpl(newState);\n      }) : setStateImpl(newState);\n    }, [setStateImpl, v7_startTransition]);\n    React__namespace.useLayoutEffect(function () {\n      return history.listen(setState);\n    }, [history, setState]);\n    return /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\n      basename: basename,\n      children: children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    });\n  }\n  {\n    HistoryRouter.displayName = \"unstable_HistoryRouter\";\n  }\n  var isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\n  var ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n  /**\n   * The public API for rendering a history-aware <a>.\n   */\n  var Link = /*#__PURE__*/React__namespace.forwardRef(function LinkWithRef(_ref4, ref) {\n    var onClick = _ref4.onClick,\n      relative = _ref4.relative,\n      reloadDocument = _ref4.reloadDocument,\n      replace = _ref4.replace,\n      state = _ref4.state,\n      target = _ref4.target,\n      to = _ref4.to,\n      preventScrollReset = _ref4.preventScrollReset,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n    var _React__namespace$use7 = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext),\n      basename = _React__namespace$use7.basename;\n\n    // Rendered into <a href> for absolute URLs\n    var absoluteHref;\n    var isExternal = false;\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          var currentUrl = new URL(window.location.href);\n          var targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n          var path = router.stripBasename(targetUrl.pathname, basename);\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          router.UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\");\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    var href = reactRouter.useHref(to, {\n      relative: relative\n    });\n    var internalOnClick = useLinkClickHandler(to, {\n      replace: replace,\n      state: state,\n      target: target,\n      preventScrollReset: preventScrollReset,\n      relative: relative\n    });\n    function handleClick(event) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n    return /*#__PURE__*/(\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      React__namespace.createElement(\"a\", _extends({}, rest, {\n        href: absoluteHref || href,\n        onClick: isExternal || reloadDocument ? onClick : handleClick,\n        ref: ref,\n        target: target\n      }))\n    );\n  });\n  {\n    Link.displayName = \"Link\";\n  }\n  /**\n   * A <Link> wrapper that knows if it's \"active\" or not.\n   */\n  var NavLink = /*#__PURE__*/React__namespace.forwardRef(function NavLinkWithRef(_ref5, ref) {\n    var _ref5$ariaCurrent = _ref5[\"aria-current\"],\n      ariaCurrentProp = _ref5$ariaCurrent === void 0 ? \"page\" : _ref5$ariaCurrent,\n      _ref5$caseSensitive = _ref5.caseSensitive,\n      caseSensitive = _ref5$caseSensitive === void 0 ? false : _ref5$caseSensitive,\n      _ref5$className = _ref5.className,\n      classNameProp = _ref5$className === void 0 ? \"\" : _ref5$className,\n      _ref5$end = _ref5.end,\n      end = _ref5$end === void 0 ? false : _ref5$end,\n      styleProp = _ref5.style,\n      to = _ref5.to,\n      children = _ref5.children,\n      rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n    var path = reactRouter.useResolvedPath(to, {\n      relative: rest.relative\n    });\n    var location = reactRouter.useLocation();\n    var routerState = React__namespace.useContext(reactRouter.UNSAFE_DataRouterStateContext);\n    var _React__namespace$use8 = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext),\n      navigator = _React__namespace$use8.navigator;\n    var toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n    var locationPathname = location.pathname;\n    var nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n      toPathname = toPathname.toLowerCase();\n    }\n    var isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n    var isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n    var ariaCurrent = isActive ? ariaCurrentProp : undefined;\n    var className;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({\n        isActive: isActive,\n        isPending: isPending\n      });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n    }\n    var style = typeof styleProp === \"function\" ? styleProp({\n      isActive: isActive,\n      isPending: isPending\n    }) : styleProp;\n    return /*#__PURE__*/React__namespace.createElement(Link, _extends({}, rest, {\n      \"aria-current\": ariaCurrent,\n      className: className,\n      ref: ref,\n      style: style,\n      to: to\n    }), typeof children === \"function\" ? children({\n      isActive: isActive,\n      isPending: isPending\n    }) : children);\n  });\n  {\n    NavLink.displayName = \"NavLink\";\n  }\n  /**\n   * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n   * that the interaction with the server is with `fetch` instead of new document\n   * requests, allowing components to add nicer UX to the page as the form is\n   * submitted and returns with data.\n   */\n  var Form = /*#__PURE__*/React__namespace.forwardRef(function (props, ref) {\n    var submit = useSubmit();\n    return /*#__PURE__*/React__namespace.createElement(FormImpl, _extends({}, props, {\n      submit: submit,\n      ref: ref\n    }));\n  });\n  {\n    Form.displayName = \"Form\";\n  }\n  var FormImpl = /*#__PURE__*/React__namespace.forwardRef(function (_ref6, forwardedRef) {\n    var reloadDocument = _ref6.reloadDocument,\n      replace = _ref6.replace,\n      state = _ref6.state,\n      _ref6$method = _ref6.method,\n      method = _ref6$method === void 0 ? defaultMethod : _ref6$method,\n      action = _ref6.action,\n      onSubmit = _ref6.onSubmit,\n      submit = _ref6.submit,\n      relative = _ref6.relative,\n      preventScrollReset = _ref6.preventScrollReset,\n      props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n    var formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    var formAction = useFormAction(action, {\n      relative: relative\n    });\n    var submitHandler = function submitHandler(event) {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n      var submitter = event.nativeEvent.submitter;\n      var submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace: replace,\n        state: state,\n        relative: relative,\n        preventScrollReset: preventScrollReset\n      });\n    };\n    return /*#__PURE__*/React__namespace.createElement(\"form\", _extends({\n      ref: forwardedRef,\n      method: formMethod,\n      action: formAction,\n      onSubmit: reloadDocument ? onSubmit : submitHandler\n    }, props));\n  });\n  {\n    FormImpl.displayName = \"FormImpl\";\n  }\n  /**\n   * This component will emulate the browser's scroll restoration on location\n   * changes.\n   */\n  function ScrollRestoration(_ref7) {\n    var getKey = _ref7.getKey,\n      storageKey = _ref7.storageKey;\n    useScrollRestoration({\n      getKey: getKey,\n      storageKey: storageKey\n    });\n    return null;\n  }\n  {\n    ScrollRestoration.displayName = \"ScrollRestoration\";\n  }\n  //#endregion\n\n  ////////////////////////////////////////////////////////////////////////////////\n  //#region Hooks\n  ////////////////////////////////////////////////////////////////////////////////\n  var DataRouterHook;\n  (function (DataRouterHook) {\n    DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n    DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n    DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n    DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  })(DataRouterHook || (DataRouterHook = {}));\n  var DataRouterStateHook;\n  (function (DataRouterStateHook) {\n    DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n    DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  })(DataRouterStateHook || (DataRouterStateHook = {}));\n  function getDataRouterConsoleError(hookName) {\n    return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n  }\n  function useDataRouterContext(hookName) {\n    var ctx = React__namespace.useContext(reactRouter.UNSAFE_DataRouterContext);\n    !ctx ? router.UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : void 0;\n    return ctx;\n  }\n  function useDataRouterState(hookName) {\n    var state = React__namespace.useContext(reactRouter.UNSAFE_DataRouterStateContext);\n    !state ? router.UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : void 0;\n    return state;\n  }\n\n  /**\n   * Handles the click behavior for router `<Link>` components. This is useful if\n   * you need to create custom `<Link>` components with the same click behavior we\n   * use in our exported `<Link>`.\n   */\n  function useLinkClickHandler(to, _temp) {\n    var _ref12 = _temp === void 0 ? {} : _temp,\n      target = _ref12.target,\n      replaceProp = _ref12.replace,\n      state = _ref12.state,\n      preventScrollReset = _ref12.preventScrollReset,\n      relative = _ref12.relative;\n    var navigate = reactRouter.useNavigate();\n    var location = reactRouter.useLocation();\n    var path = reactRouter.useResolvedPath(to, {\n      relative: relative\n    });\n    return React__namespace.useCallback(function (event) {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        var replace = replaceProp !== undefined ? replaceProp : reactRouter.createPath(location) === reactRouter.createPath(path);\n        navigate(to, {\n          replace: replace,\n          state: state,\n          preventScrollReset: preventScrollReset,\n          relative: relative\n        });\n      }\n    }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n  }\n\n  /**\n   * A convenient wrapper for reading and writing search parameters via the\n   * URLSearchParams interface.\n   */\n  function useSearchParams(defaultInit) {\n    router.UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\");\n    var defaultSearchParamsRef = React__namespace.useRef(createSearchParams(defaultInit));\n    var hasSetSearchParamsRef = React__namespace.useRef(false);\n    var location = reactRouter.useLocation();\n    var searchParams = React__namespace.useMemo(function () {\n      return (\n        // Only merge in the defaults if we haven't yet called setSearchParams.\n        // Once we call that we want those to take precedence, otherwise you can't\n        // remove a param with setSearchParams({}) if it has an initial value\n        getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current)\n      );\n    }, [location.search]);\n    var navigate = reactRouter.useNavigate();\n    var setSearchParams = React__namespace.useCallback(function (nextInit, navigateOptions) {\n      var newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    }, [navigate, searchParams]);\n    return [searchParams, setSearchParams];\n  }\n\n  /**\n   * Submits a HTML `<form>` to the server without reloading the page.\n   */\n\n  /**\n   * Submits a fetcher `<form>` to the server without reloading the page.\n   */\n\n  function validateClientSideSubmission() {\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n  }\n\n  /**\n   * Returns a function that may be used to programmatically submit a form (or\n   * some arbitrary data) to the server.\n   */\n  function useSubmit() {\n    var _useDataRouterContext = useDataRouterContext(DataRouterHook.UseSubmit),\n      router = _useDataRouterContext.router;\n    var _React__namespace$use9 = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext),\n      basename = _React__namespace$use9.basename;\n    var currentRouteId = reactRouter.UNSAFE_useRouteId();\n    return React__namespace.useCallback(function (target, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      validateClientSideSubmission();\n      var _getFormSubmissionInf = getFormSubmissionInfo(target, basename),\n        action = _getFormSubmissionInf.action,\n        method = _getFormSubmissionInf.method,\n        encType = _getFormSubmissionInf.encType,\n        formData = _getFormSubmissionInf.formData,\n        body = _getFormSubmissionInf.body;\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData: formData,\n        body: body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId\n      });\n    }, [router, basename, currentRouteId]);\n  }\n\n  /**\n   * Returns the implementation for fetcher.submit\n   */\n  function useSubmitFetcher(fetcherKey, fetcherRouteId) {\n    var _useDataRouterContext2 = useDataRouterContext(DataRouterHook.UseSubmitFetcher),\n      router$1 = _useDataRouterContext2.router;\n    var _React__namespace$use10 = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext),\n      basename = _React__namespace$use10.basename;\n    return React__namespace.useCallback(function (target, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      validateClientSideSubmission();\n      var _getFormSubmissionInf2 = getFormSubmissionInfo(target, basename),\n        action = _getFormSubmissionInf2.action,\n        method = _getFormSubmissionInf2.method,\n        encType = _getFormSubmissionInf2.encType,\n        formData = _getFormSubmissionInf2.formData,\n        body = _getFormSubmissionInf2.body;\n      !(fetcherRouteId != null) ? router.UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : void 0;\n      router$1.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData: formData,\n        body: body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType\n      });\n    }, [router$1, basename, fetcherKey, fetcherRouteId]);\n  }\n\n  // v7: Eventually we should deprecate this entirely in favor of using the\n  // router method directly?\n  function useFormAction(action, _temp2) {\n    var _ref13 = _temp2 === void 0 ? {} : _temp2,\n      relative = _ref13.relative;\n    var _React__namespace$use11 = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext),\n      basename = _React__namespace$use11.basename;\n    var routeContext = React__namespace.useContext(reactRouter.UNSAFE_RouteContext);\n    !routeContext ? router.UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : void 0;\n    var _routeContext$matches = routeContext.matches.slice(-1),\n      _routeContext$matches2 = _slicedToArray(_routeContext$matches, 1),\n      match = _routeContext$matches2[0];\n    // Shallow clone path so we can modify it below, otherwise we modify the\n    // object referenced by useMemo inside useResolvedPath\n    var path = _extends({}, reactRouter.useResolvedPath(action ? action : \".\", {\n      relative: relative\n    }));\n\n    // Previously we set the default action to \".\". The problem with this is that\n    // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n    // URL. This is the intended behavior of when \".\" is specifically provided as\n    // the form action, but inconsistent w/ browsers when the action is omitted.\n    // https://github.com/remix-run/remix/issues/927\n    var location = reactRouter.useLocation();\n    if (action == null) {\n      // Safe to write to these directly here since if action was undefined, we\n      // would have called useResolvedPath(\".\") which will never include a search\n      // or hash\n      path.search = location.search;\n      path.hash = location.hash;\n\n      // When grabbing search params from the URL, remove the automatically\n      // inserted ?index param so we match the useResolvedPath search behavior\n      // which would not include ?index\n      if (match.route.index) {\n        var params = new URLSearchParams(path.search);\n        params.delete(\"index\");\n        path.search = params.toString() ? \"?\" + params.toString() : \"\";\n      }\n    }\n    if ((!action || action === \".\") && match.route.index) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    }\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to creating the form action.  If this is a root navigation, then just use\n    // the raw basename which allows the basename to have full control over the\n    // presence of a trailing slash on root actions\n    if (basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : router.joinPaths([basename, path.pathname]);\n    }\n    return reactRouter.createPath(path);\n  }\n  function createFetcherForm(fetcherKey, routeId) {\n    var FetcherForm = /*#__PURE__*/React__namespace.forwardRef(function (props, ref) {\n      var submit = useSubmitFetcher(fetcherKey, routeId);\n      return /*#__PURE__*/React__namespace.createElement(FormImpl, _extends({}, props, {\n        ref: ref,\n        submit: submit\n      }));\n    });\n    {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }\n  var fetcherId = 0;\n  /**\n   * Interacts with route loaders and actions without causing a navigation. Great\n   * for any interaction that stays on the same page.\n   */\n  function useFetcher() {\n    var _route$matches;\n    var _useDataRouterContext3 = useDataRouterContext(DataRouterHook.UseFetcher),\n      router$1 = _useDataRouterContext3.router;\n    var route = React__namespace.useContext(reactRouter.UNSAFE_RouteContext);\n    !route ? router.UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : void 0;\n    var routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n    !(routeId != null) ? router.UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : void 0;\n    var _React__namespace$use12 = React__namespace.useState(function () {\n        return String(++fetcherId);\n      }),\n      _React__namespace$use13 = _slicedToArray(_React__namespace$use12, 1),\n      fetcherKey = _React__namespace$use13[0];\n    var _React__namespace$use14 = React__namespace.useState(function () {\n        !routeId ? router.UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : void 0;\n        return createFetcherForm(fetcherKey, routeId);\n      }),\n      _React__namespace$use15 = _slicedToArray(_React__namespace$use14, 1),\n      Form = _React__namespace$use15[0];\n    var _React__namespace$use16 = React__namespace.useState(function () {\n        return function (href) {\n          !router$1 ? router.UNSAFE_invariant(false, \"No router available for fetcher.load()\") : void 0;\n          !routeId ? router.UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : void 0;\n          router$1.fetch(fetcherKey, routeId, href);\n        };\n      }),\n      _React__namespace$use17 = _slicedToArray(_React__namespace$use16, 1),\n      load = _React__namespace$use17[0];\n    var submit = useSubmitFetcher(fetcherKey, routeId);\n    var fetcher = router$1.getFetcher(fetcherKey);\n    var fetcherWithComponents = React__namespace.useMemo(function () {\n      return _extends({\n        Form: Form,\n        submit: submit,\n        load: load\n      }, fetcher);\n    }, [fetcher, Form, submit, load]);\n    React__namespace.useEffect(function () {\n      // Is this busted when the React team gets real weird and calls effects\n      // twice on mount?  We really just need to garbage collect here when this\n      // fetcher is no longer around.\n      return function () {\n        if (!router$1) {\n          console.warn(\"No router available to clean up from useFetcher()\");\n          return;\n        }\n        router$1.deleteFetcher(fetcherKey);\n      };\n    }, [router$1, fetcherKey]);\n    return fetcherWithComponents;\n  }\n\n  /**\n   * Provides all fetchers currently on the page. Useful for layouts and parent\n   * routes that need to provide pending/optimistic UI regarding the fetch.\n   */\n  function useFetchers() {\n    var state = useDataRouterState(DataRouterStateHook.UseFetchers);\n    return _toConsumableArray(state.fetchers.values());\n  }\n  var SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\n  var savedScrollPositions = {};\n\n  /**\n   * When rendered inside a RouterProvider, will restore scroll positions on navigations\n   */\n  function useScrollRestoration(_temp3) {\n    var _ref14 = _temp3 === void 0 ? {} : _temp3,\n      getKey = _ref14.getKey,\n      storageKey = _ref14.storageKey;\n    var _useDataRouterContext4 = useDataRouterContext(DataRouterHook.UseScrollRestoration),\n      router$1 = _useDataRouterContext4.router;\n    var _useDataRouterState = useDataRouterState(DataRouterStateHook.UseScrollRestoration),\n      restoreScrollPosition = _useDataRouterState.restoreScrollPosition,\n      preventScrollReset = _useDataRouterState.preventScrollReset;\n    var _React__namespace$use18 = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext),\n      basename = _React__namespace$use18.basename;\n    var location = reactRouter.useLocation();\n    var matches = reactRouter.useMatches();\n    var navigation = reactRouter.useNavigation();\n\n    // Trigger manual scroll restoration while we're active\n    React__namespace.useEffect(function () {\n      window.history.scrollRestoration = \"manual\";\n      return function () {\n        window.history.scrollRestoration = \"auto\";\n      };\n    }, []);\n\n    // Save positions on pagehide\n    usePageHide(React__namespace.useCallback(function () {\n      if (navigation.state === \"idle\") {\n        var key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches]));\n\n    // Read in any saved scroll locations\n    if (typeof document !== \"undefined\") {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React__namespace.useLayoutEffect(function () {\n        try {\n          var sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n          if (sessionPositions) {\n            savedScrollPositions = JSON.parse(sessionPositions);\n          }\n        } catch (e) {\n          // no-op, use default empty object\n        }\n      }, [storageKey]);\n\n      // Enable scroll restoration in the router\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React__namespace.useLayoutEffect(function () {\n        var getKeyWithoutBasename = getKey && basename !== \"/\" ? function (location, matches) {\n          return getKey(\n          // Strip the basename to match useLocation()\n          _extends({}, location, {\n            pathname: router.stripBasename(location.pathname, basename) || location.pathname\n          }), matches);\n        } : getKey;\n        var disableScrollRestoration = router$1 == null ? void 0 : router$1.enableScrollRestoration(savedScrollPositions, function () {\n          return window.scrollY;\n        }, getKeyWithoutBasename);\n        return function () {\n          return disableScrollRestoration && disableScrollRestoration();\n        };\n      }, [router$1, basename, getKey]);\n\n      // Restore scrolling when state.restoreScrollPosition changes\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React__namespace.useLayoutEffect(function () {\n        // Explicit false means don't do anything (used for submissions)\n        if (restoreScrollPosition === false) {\n          return;\n        }\n\n        // been here before, scroll to it\n        if (typeof restoreScrollPosition === \"number\") {\n          window.scrollTo(0, restoreScrollPosition);\n          return;\n        }\n\n        // try to scroll to the hash\n        if (location.hash) {\n          var el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n          if (el) {\n            el.scrollIntoView();\n            return;\n          }\n        }\n\n        // Don't reset if this navigation opted out\n        if (preventScrollReset === true) {\n          return;\n        }\n\n        // otherwise go to the top on new locations\n        window.scrollTo(0, 0);\n      }, [location, restoreScrollPosition, preventScrollReset]);\n    }\n  }\n\n  /**\n   * Setup a callback to be fired on the window's `beforeunload` event. This is\n   * useful for saving some data to `window.localStorage` just before the page\n   * refreshes.\n   *\n   * Note: The `callback` argument should be a function created with\n   * `React.useCallback()`.\n   */\n  function useBeforeUnload(callback, options) {\n    var _ref15 = options || {},\n      capture = _ref15.capture;\n    React__namespace.useEffect(function () {\n      var opts = capture != null ? {\n        capture: capture\n      } : undefined;\n      window.addEventListener(\"beforeunload\", callback, opts);\n      return function () {\n        window.removeEventListener(\"beforeunload\", callback, opts);\n      };\n    }, [callback, capture]);\n  }\n\n  /**\n   * Setup a callback to be fired on the window's `pagehide` event. This is\n   * useful for saving some data to `window.localStorage` just before the page\n   * refreshes.  This event is better supported than beforeunload across browsers.\n   *\n   * Note: The `callback` argument should be a function created with\n   * `React.useCallback()`.\n   */\n  function usePageHide(callback, options) {\n    var _ref16 = options || {},\n      capture = _ref16.capture;\n    React__namespace.useEffect(function () {\n      var opts = capture != null ? {\n        capture: capture\n      } : undefined;\n      window.addEventListener(\"pagehide\", callback, opts);\n      return function () {\n        window.removeEventListener(\"pagehide\", callback, opts);\n      };\n    }, [callback, capture]);\n  }\n\n  /**\n   * Wrapper around useBlocker to show a window.confirm prompt to users instead\n   * of building a custom UI with useBlocker.\n   *\n   * Warning: This has *a lot of rough edges* and behaves very differently (and\n   * very incorrectly in some cases) across browsers if user click addition\n   * back/forward navigations while the confirm is open.  Use at your own risk.\n   */\n  function usePrompt(_ref8) {\n    var when = _ref8.when,\n      message = _ref8.message;\n    var blocker = reactRouter.unstable_useBlocker(when);\n    React__namespace.useEffect(function () {\n      if (blocker.state === \"blocked\" && !when) {\n        blocker.reset();\n      }\n    }, [blocker, when]);\n    React__namespace.useEffect(function () {\n      if (blocker.state === \"blocked\") {\n        var proceed = window.confirm(message);\n        if (proceed) {\n          setTimeout(blocker.proceed, 0);\n        } else {\n          blocker.reset();\n        }\n      }\n    }, [blocker, message]);\n  }\n\n  //#endregion\n\n  Object.defineProperty(exports, 'AbortedDeferredError', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.AbortedDeferredError;\n    }\n  });\n  Object.defineProperty(exports, 'Await', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.Await;\n    }\n  });\n  Object.defineProperty(exports, 'MemoryRouter', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.MemoryRouter;\n    }\n  });\n  Object.defineProperty(exports, 'Navigate', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.Navigate;\n    }\n  });\n  Object.defineProperty(exports, 'NavigationType', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.NavigationType;\n    }\n  });\n  Object.defineProperty(exports, 'Outlet', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.Outlet;\n    }\n  });\n  Object.defineProperty(exports, 'Route', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.Route;\n    }\n  });\n  Object.defineProperty(exports, 'Router', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.Router;\n    }\n  });\n  Object.defineProperty(exports, 'RouterProvider', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.RouterProvider;\n    }\n  });\n  Object.defineProperty(exports, 'Routes', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.Routes;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_DataRouterContext', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.UNSAFE_DataRouterContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_DataRouterStateContext', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.UNSAFE_DataRouterStateContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_LocationContext', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.UNSAFE_LocationContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_NavigationContext', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.UNSAFE_NavigationContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_RouteContext', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.UNSAFE_RouteContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_useRouteId', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.UNSAFE_useRouteId;\n    }\n  });\n  Object.defineProperty(exports, 'createMemoryRouter', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.createMemoryRouter;\n    }\n  });\n  Object.defineProperty(exports, 'createPath', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.createPath;\n    }\n  });\n  Object.defineProperty(exports, 'createRoutesFromChildren', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.createRoutesFromChildren;\n    }\n  });\n  Object.defineProperty(exports, 'createRoutesFromElements', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.createRoutesFromElements;\n    }\n  });\n  Object.defineProperty(exports, 'defer', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.defer;\n    }\n  });\n  Object.defineProperty(exports, 'generatePath', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.generatePath;\n    }\n  });\n  Object.defineProperty(exports, 'isRouteErrorResponse', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.isRouteErrorResponse;\n    }\n  });\n  Object.defineProperty(exports, 'json', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.json;\n    }\n  });\n  Object.defineProperty(exports, 'matchPath', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.matchPath;\n    }\n  });\n  Object.defineProperty(exports, 'matchRoutes', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.matchRoutes;\n    }\n  });\n  Object.defineProperty(exports, 'parsePath', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.parsePath;\n    }\n  });\n  Object.defineProperty(exports, 'redirect', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.redirect;\n    }\n  });\n  Object.defineProperty(exports, 'renderMatches', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.renderMatches;\n    }\n  });\n  Object.defineProperty(exports, 'resolvePath', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.resolvePath;\n    }\n  });\n  Object.defineProperty(exports, 'unstable_useBlocker', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.unstable_useBlocker;\n    }\n  });\n  Object.defineProperty(exports, 'useActionData', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useActionData;\n    }\n  });\n  Object.defineProperty(exports, 'useAsyncError', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useAsyncError;\n    }\n  });\n  Object.defineProperty(exports, 'useAsyncValue', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useAsyncValue;\n    }\n  });\n  Object.defineProperty(exports, 'useHref', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useHref;\n    }\n  });\n  Object.defineProperty(exports, 'useInRouterContext', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useInRouterContext;\n    }\n  });\n  Object.defineProperty(exports, 'useLoaderData', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useLoaderData;\n    }\n  });\n  Object.defineProperty(exports, 'useLocation', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useLocation;\n    }\n  });\n  Object.defineProperty(exports, 'useMatch', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useMatch;\n    }\n  });\n  Object.defineProperty(exports, 'useMatches', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useMatches;\n    }\n  });\n  Object.defineProperty(exports, 'useNavigate', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useNavigate;\n    }\n  });\n  Object.defineProperty(exports, 'useNavigation', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useNavigation;\n    }\n  });\n  Object.defineProperty(exports, 'useNavigationType', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useNavigationType;\n    }\n  });\n  Object.defineProperty(exports, 'useOutlet', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useOutlet;\n    }\n  });\n  Object.defineProperty(exports, 'useOutletContext', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useOutletContext;\n    }\n  });\n  Object.defineProperty(exports, 'useParams', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useParams;\n    }\n  });\n  Object.defineProperty(exports, 'useResolvedPath', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useResolvedPath;\n    }\n  });\n  Object.defineProperty(exports, 'useRevalidator', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useRevalidator;\n    }\n  });\n  Object.defineProperty(exports, 'useRouteError', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useRouteError;\n    }\n  });\n  Object.defineProperty(exports, 'useRouteLoaderData', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useRouteLoaderData;\n    }\n  });\n  Object.defineProperty(exports, 'useRoutes', {\n    enumerable: true,\n    get: function get() {\n      return reactRouter.useRoutes;\n    }\n  });\n  exports.BrowserRouter = BrowserRouter;\n  exports.Form = Form;\n  exports.HashRouter = HashRouter;\n  exports.Link = Link;\n  exports.NavLink = NavLink;\n  exports.ScrollRestoration = ScrollRestoration;\n  exports.UNSAFE_useScrollRestoration = useScrollRestoration;\n  exports.createBrowserRouter = createBrowserRouter;\n  exports.createHashRouter = createHashRouter;\n  exports.createSearchParams = createSearchParams;\n  exports.unstable_HistoryRouter = HistoryRouter;\n  exports.unstable_usePrompt = usePrompt;\n  exports.useBeforeUnload = useBeforeUnload;\n  exports.useFetcher = useFetcher;\n  exports.useFetchers = useFetchers;\n  exports.useFormAction = useFormAction;\n  exports.useLinkClickHandler = useLinkClickHandler;\n  exports.useSearchParams = useSearchParams;\n  exports.useSubmit = useSubmit;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","shouldProcessLinkClick","target","button","createSearchParams","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","getSearchParamsForLocation","locationSearch","defaultSearchParams","searchParams","_iterator","_createForOfIteratorHelper","_step","_loop","has","getAll","forEach","append","s","n","done","err","e","f","_formDataSupportsSubmitter","isFormDataSubmitterSupported","FormData","document","createElement","supportedFormEncTypes","Set","getFormEncType","encType","router","UNSAFE_warning","getFormSubmissionInfo","basename","method","action","formData","body","attr","getAttribute","stripBasename","type","form","Error","name","prefix","undefined","createBrowserRouter","routes","opts","createRouter","future","_extends","v7_prependBasename","history","createBrowserHistory","window","hydrationData","parseHydrationData","mapRouteProperties","reactRouter","UNSAFE_mapRouteProperties","initialize","createHashRouter","createHashHistory","_window","state","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","_i","_entries","length","_entries$_i","_slicedToArray","val","__type","ErrorResponse","status","statusText","data","internal","__subType","ErrorConstructor","error","message","stack","START_TRANSITION","startTransitionImpl","React__namespace","BrowserRouter","_ref","children","historyRef","useRef","current","v5Compat","_React__namespace$use","useState","location","_React__namespace$use2","setStateImpl","_ref9","v7_startTransition","setState","useCallback","newState","useLayoutEffect","listen","Router","navigationType","navigator","HashRouter","_ref2","_React__namespace$use3","_React__namespace$use4","_ref10","HistoryRouter","_ref3","_React__namespace$use5","_React__namespace$use6","_ref11","displayName","isBrowser","ABSOLUTE_URL_REGEX","Link","forwardRef","LinkWithRef","_ref4","ref","onClick","relative","reloadDocument","replace","to","preventScrollReset","rest","_objectWithoutPropertiesLoose","_excluded","_React__namespace$use7","useContext","UNSAFE_NavigationContext","absoluteHref","isExternal","test","currentUrl","URL","href","targetUrl","startsWith","protocol","path","pathname","origin","search","hash","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","_ref5","_ref5$ariaCurrent","ariaCurrentProp","_ref5$caseSensitive","caseSensitive","_ref5$className","className","classNameProp","_ref5$end","end","styleProp","style","_excluded2","useResolvedPath","useLocation","routerState","UNSAFE_DataRouterStateContext","_React__namespace$use8","toPathname","encodeLocation","locationPathname","nextLocationPathname","navigation","isActive","charAt","isPending","ariaCurrent","filter","Boolean","join","Form","props","submit","useSubmit","FormImpl","_ref6","forwardedRef","_ref6$method","onSubmit","_excluded3","formMethod","formAction","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","_ref7","getKey","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","UNSAFE_DataRouterContext","UNSAFE_invariant","useDataRouterState","_temp","_ref12","replaceProp","navigate","useNavigate","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","useMemo","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","_useDataRouterContext","UseSubmit","_React__namespace$use9","currentRouteId","UNSAFE_useRouteId","options","_getFormSubmissionInf","formEncType","fromRouteId","useSubmitFetcher","fetcherKey","fetcherRouteId","_useDataRouterContext2","UseSubmitFetcher","router$1","_React__namespace$use10","_getFormSubmissionInf2","fetch","_temp2","_ref13","_React__namespace$use11","routeContext","UNSAFE_RouteContext","_routeContext$matches","matches","slice","_routeContext$matches2","match","route","index","params","delete","toString","joinPaths","createFetcherForm","routeId","FetcherForm","fetcherId","useFetcher","_route$matches","_useDataRouterContext3","UseFetcher","id","_React__namespace$use12","String","_React__namespace$use13","_React__namespace$use14","_React__namespace$use15","_React__namespace$use16","_React__namespace$use17","load","fetcher","getFetcher","fetcherWithComponents","useEffect","console","warn","deleteFetcher","useFetchers","UseFetchers","_toConsumableArray","fetchers","values","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp3","_ref14","_useDataRouterContext4","UseScrollRestoration","_useDataRouterState","restoreScrollPosition","_React__namespace$use18","useMatches","useNavigation","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","getKeyWithoutBasename","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","decodeURIComponent","scrollIntoView","useBeforeUnload","callback","_ref15","capture","addEventListener","removeEventListener","_ref16","usePrompt","_ref8","when","blocker","unstable_useBlocker","reset","proceed","confirm","setTimeout"],"sources":["/home/nikhileswar/Desktop/Doctorspectra/test-react/node_modules/react-router-dom/dom.ts","/home/nikhileswar/Desktop/Doctorspectra/test-react/node_modules/react-router-dom/index.tsx"],"sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    let submit = useSubmit();\n    return <FormImpl {...props} submit={submit} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  submit: SubmitFunction | FetcherSubmitFunction;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n      });\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(\n  fetcherKey: string,\n  fetcherRouteId: string\n): FetcherSubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let { basename } = React.useContext(NavigationContext);\n\n  return React.useCallback<FetcherSubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      invariant(\n        fetcherRouteId != null,\n        \"No routeId available for useFetcher()\"\n      );\n      router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n      });\n    },\n    [router, basename, fetcherKey, fetcherRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n    (props, ref) => {\n      let submit = useSubmitFetcher(fetcherKey, routeId);\n      return <FormImpl {...props} ref={ref} submit={submit} />;\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}